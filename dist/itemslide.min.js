(function() {
    var a = 0;
    var b = [ "ms", "moz", "webkit", "o" ];
    for (var c = 0; c < b.length && !window.requestAnimationFrame; ++c) {
        window.requestAnimationFrame = window[b[c] + "RequestAnimationFrame"];
        window.cancelAnimationFrame = window[b[c] + "CancelAnimationFrame"] || window[b[c] + "CancelRequestAnimationFrame"];
    }
    if (!window.requestAnimationFrame) window.requestAnimationFrame = function(b, c) {
        var d = new Date().getTime();
        var e = Math.max(0, 16 - (d - a));
        var f = window.setTimeout(function() {
            b(d + e);
        }, e);
        a = d + e;
        return f;
    };
    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function(a) {
        clearTimeout(a);
    };
})();

var isExplorer = false || !!document.documentMode;

$(function() {
    "use strict";
    $.fn.itemslide = function(a) {
        var b = 0, c = 0;
        var d = 0, e = false, f = 0;
        var g = false, h = false;
        var i = this;
        var j = {
            duration: 350,
            swipe_sensitivity: 150,
            disable_slide: false,
            disable_clicktoslide: false,
            disable_scroll: false,
            start: 0,
            one_item: false,
            pan_threshold: .3,
            disable_autowidth: false,
            parent_width: false,
            swipe_out: false,
            infinite: true
        };
        var k = $.extend({}, j, a);
        if (k.parent_width) {
            i.children().width(i.parent().outerWidth(true));
        }
        var l = function(a) {
            var b = 0;
            $(i).children().each(function() {
                b += $(this).outerWidth();
            });
            return b;
        };
        var m = {
            currentIndex: 0,
            disable_autowidth: k.disable_autowidth,
            parent_width: k.parent_width,
            velocity: 0,
            slideHeight: i.children().height(),
            childrenWidth: l(i),
            childrenCount: i.children().length
        };
        i.translate3d = function(a, b) {
            if (a != null) {
                this.css("transform", "translate3d(" + a + "px" + "," + (b || 0) + "px, 0px)");
            } else {
                var c = matrixToArray(this.css("transform"));
                if ($.fn.jquery != null) {
                    return {
                        x: isExplorer ? parseFloat(c[12]) : parseFloat(c[4]),
                        y: isExplorer ? parseFloat(c[13]) : parseFloat(c[5])
                    };
                } else {
                    var d = this.css("transform").replace("translate3d", "").replace("(", "").replace(")", "").replace(" ", "").replace("px", "").split(",");
                    return {
                        x: parseFloat(d[0]),
                        y: parseFloat(d[1])
                    };
                }
            }
        };
        if (k.infinite) {
            var n = $(i).children();
            $(i).prepend(n.clone());
            $(i).append(n.clone());
            m.currentIndex = n.length;
            k.start = n.length;
            while (l(i) < 2 * $(i).width()) {
                $(i).append(n.clone());
            }
            var o = i.translate3d;
            i.translate3d = function(a, b) {
                if (a != null) {
                    if (a > -m.childrenWidth) {
                        a -= m.childrenWidth;
                        m.currentIndex += m.currentIndex <= m.childrenCount ? m.childrenCount : 0;
                    }
                    if (a < -2 * m.childrenWidth) {
                        a += m.childrenWidth;
                        m.currentIndex -= m.currentIndex >= 2 * m.childrenCount ? m.childrenCount : 0;
                    }
                    console.log("changing active slide to" + m.currentIndex);
                    A(m.currentIndex);
                    return o.call($(i), a, b);
                }
                return o.call($(i), a, b);
            };
        }
        i.end_animation = true;
        if (k.swipe_out) slideout(i, k, m);
        i.css({
            "touch-action": "pan-y",
            "-webkit-user-select": "none",
            "-webkit-touch-callout": "none",
            "-webkit-user-drag": "none",
            "-webkit-tap-highlight-color": "rgba(0, 0, 0, 0)"
        });
        if (!k.disable_autowidth) i.css("width", i.children("li").length * i.children().outerWidth(true) + 10);
        i.translate3d(0);
        E(k.start);
        var p = false;
        var q = 0, r = 0;
        var s = false, t = 0, u;
        i.savedSlideIndex = 0;
        i.on("mousedown touchstart", "li", function(a) {
            if (a.type == "touchstart") {
                u = $.fn.jquery == null ? a.changedTouches[0] : a.originalEvent.touches[0] || a.originalEvent.changedTouches[0];
            } else {
                u = a;
            }
            if (!i.end_animation) return;
            t = Date.now();
            p = 1;
            s = 0;
            q = u.pageX;
            r = u.pageY;
            g = false;
            h = false;
            i.savedSlide = $(this);
            i.savedSlideIndex = i.savedSlide.index();
            x = 0;
            $(window).on("mousemove touchmove", y);
            if (window.getSelection) {
                if (window.getSelection().empty) {
                    window.getSelection().empty();
                } else if (window.getSelection().removeAllRanges) {
                    window.getSelection().removeAllRanges();
                }
            } else if (document.selection) {
                document.selection.empty();
            }
        });
        var v = true, w = 0;
        var x = 0;
        function y(a) {
            if (a.type == "touchmove") {
                u = $.fn.jquery == null ? a.changedTouches[0] : a.originalEvent.touches[0] || a.originalEvent.changedTouches[0];
                if (Math.abs(u.pageX - q) > 10) s = 1;
                if (s) a.preventDefault();
            } else {
                u = a;
                if (!k.disable_slide && !k.swipe_out) a.preventDefault();
            }
            if (-(u.pageX - q) > 0) {
                d = 1;
            } else {
                d = -1;
            }
            if (D()) {
                if (v) {
                    w = u.pageX;
                    v = 0;
                }
            } else {
                if (!v) {
                    i.currentLandPos = i.translate3d().x;
                    q = u.pageX;
                }
                v = 1;
            }
            if (x == 1) {
                if (isExplorer) {
                    i.children().css("height", m.slideHeight);
                }
                i.savedSlide.wrapAll("<div class='itemslide_slideoutwrap' />");
                x = -1;
            }
            if (Math.abs(u.pageX - q) > 6) {
                if (!g && i.end_animation) h = true;
                cancelAnimationFrame(c);
            }
            if (Math.abs(u.pageY - r) > 6) {
                if (!h && i.end_animation) {
                    g = true;
                }
            }
            if (h) {
                if (k.disable_slide) {
                    return;
                }
                g = false;
                i.translate3d((v == 0 ? w - q + (u.pageX - w) / 4 : u.pageX - q) + i.currentLandPos);
                i.trigger("changePos");
                i.trigger("pan");
            } else if (g && k.swipe_out) {
                a.preventDefault();
                $(".itemslide_slideoutwrap").translate3d(0, u.pageY - r);
                if (x != -1) x = 1;
            }
        }
        $(window).on("mouseup touchend", function(a) {
            if (p) {
                if (a.type == "touchend") u = $.fn.jquery == null ? a.changedTouches[0] : a.originalEvent.touches[0] || a.originalEvent.changedTouches[0]; else u = a;
                p = false;
                $(window).off("mousemove touchmove");
                if (g && k.swipe_out) {
                    g = false;
                    i.swipeOut();
                    return;
                } else if (i.end_animation && !k.disable_slide) {
                    var b = Date.now() - t;
                    m.velocity = -(u.pageX - q) / b;
                    if (m.velocity > 0) {
                        d = 1;
                    } else {
                        d = -1;
                    }
                    f = (u.pageX - q) * d * -1;
                    if ((u.pageX - q) * d < 6 * -1) {
                        E(B(m.velocity * k.swipe_sensitivity - i.translate3d().x));
                        return;
                    }
                }
                if (i.savedSlide.index() != m.currentIndex && !k.disable_clicktoslide) {
                    a.preventDefault();
                    E(i.savedSlide.index());
                }
            }
        });
        try {
            i.mousewheel(function(a) {
                if (!k.disable_scroll && !g) {
                    a.preventDefault();
                    var b = m.currentIndex - ((a.deltaX == 0 ? a.deltaY : a.deltaX) > 0 ? 1 : -1);
                    console.log("mouselanding = " + b);
                    if (b >= i.children("li").length || b < 0) return;
                    m.velocity = 0;
                    E(b);
                }
            });
        } catch (z) {}
        function A(a) {
            i.children(".itemslide-active").removeClass("itemslide-active");
            i.children(":nth-child(" + (a + 1 || 0) + ")").addClass("itemslide-active");
            if (a != k.currentIndex) {
                m.currentIndex = a;
                i.trigger("changeActiveIndex");
            }
        }
        function B(a) {
            for (var b = 0; b < i.children("li").length; b++) {
                if (i.children().outerWidth(true) * b + i.children().outerWidth(true) / 2 - i.children().outerWidth(true) * k.pan_threshold * d - C(0) > a) {
                    if (!k.one_item) return b; else {
                        if (b != m.currentIndex) return m.currentIndex + 1 * d; else return m.currentIndex;
                    }
                }
            }
            return k.one_item ? m.currentIndex + 1 : i.children("li").length - 1;
        }
        function C(a) {
            return -(a * i.children().outerWidth(true) - (i.parent().outerWidth(true) - i.children().outerWidth(true)) / 2);
        }
        function D() {
            return Math.floor(i.translate3d().x) > C(0) && d == -1 || Math.ceil(i.translate3d().x) < C(i.children("li").length - 1) && d == 1;
        }
        function E(a) {
            if (a >= i.children("li").length - 1 || a <= 0) {
                e = true;
                a = Math.min(Math.max(a, 0), i.children("li").length - 1);
            } else {
                e = false;
            }
            A(a);
            G = Math.max(k.duration - 1920 / $(window).width() * Math.abs(m.velocity) * 9 * (k.duration / 230) - (D() ? f / 15 : 0) * (k.duration / 230), 50);
            F = e ? Math.abs(m.velocity) * 250 / $(window).width() : 0;
            b = i.translate3d().x;
            i.currentLandPos = C(a);
            cancelAnimationFrame(c);
            H = Date.now();
            c = requestAnimationFrame(I);
        }
        var F = 0, G = k.duration, H = Date.now();
        function I() {
            var a = Date.now() - H;
            i.trigger("changePos");
            i.translate3d(b - easeOutBack(a, 0, b - i.currentLandPos, G, F));
            if (a >= G) {
                i.translate3d(i.currentLandPos);
                return;
            }
            c = requestAnimationFrame(I);
        }
        i.gotoWithoutAnimation = function(a) {
            A(a);
            m.currentIndex = a;
            i.currentLandPos = C(a);
            i.translate3d(C(a));
        };
        i.gotoSlide = function(a) {
            E(a);
        };
        i.next = function() {
            E(m.currentIndex + 1);
        };
        i.previous = function() {
            E(m.currentIndex - 1);
        };
        i.reload = function() {
            if (m.parent_width) {
                this.children().width(this.parent().outerWidth(true));
            }
            if (!m.disable_autowidth) {
                this.css("width", this.children("li").length * this.children().outerWidth(true) + 10);
            }
            m.slideHeight = this.children().height();
            m.velocity = 0;
            this.gotoWithoutAnimation(m.currentIndex);
        };
        i.addSlide = function(a) {
            this.append("<li>" + a + "</li>");
            this.reload();
        };
        i.removeSlide = function(a) {
            this.children(":nth-child(" + (a + 1 || 0) + ")").remove();
        };
        i.getActiveIndex = function() {
            return m.currentIndex;
        };
        i.getCurrentPos = function() {
            return this.translate3d().x;
        };
    };
});

function matrixToArray(a) {
    return a.substr(7, a.length - 8).split(", ");
}

function easeOutBack(a, b, c, d, e) {
    if (e == undefined) e = 1.70158;
    return c * ((a = a / d - 1) * a * ((e + 1) * a + e) + 1) + b;
}

function slideout(a, b, c) {
    var d = -400, e = Date.now(), f = 0, g = 0, h = 0;
    var i = 0, j = 0, k, l = false;
    var m;
    a.end_animation = true;
    var n = false;
    a.swipeOut = function() {
        f = $(".itemslide_slideoutwrap").translate3d().y;
        m = f < 0;
        if (!m) d = 400; else d = -400;
        if (Math.abs(0 - f) < 50) {
            n = true;
            d = 0;
        } else {
            n = false;
            a.trigger({
                type: "swipeout",
                slide: a.savedSlideIndex
            });
        }
        q = 0;
        i = b.duration;
        k = a.savedSlide;
        e = Date.now();
        j = a.savedSlide.css("opacity");
        if (a.savedSlideIndex < c.currentIndex) {
            r = true;
            a.children(":nth-child(-n+" + (a.savedSlideIndex + 1) + ")").wrapAll("<div class='itemslide_move' />");
        } else {
            r = false;
            a.children(":nth-child(n+" + (a.savedSlideIndex + 2) + ")").wrapAll("<div class='itemslide_move' />");
        }
        o = true;
        a.end_animation = false;
        h = requestAnimationFrame(s);
    };
    var o = true, p = 0;
    var q = 0;
    var r = false;
    function s() {
        p = Date.now() - e;
        if (o) {
            $(".itemslide_slideoutwrap").translate3d(0, f - easeOutBack(p, 0, f - d, 250, 0));
            a.savedSlide.css("opacity", j - easeOutBack(p, 0, j - 0, 250, 0) * (n ? -1 : 1));
        } else {
            if (n) {
                $(".itemslide_slideoutwrap").children().unwrap();
                $(".itemslide_move").children().unwrap();
                if (isExplorer) {
                    a.children().css("height", "");
                }
                a.end_animation = true;
                p = 0;
                return;
            }
            $(".itemslide_move").translate3d(0 - easeOutBack(p - 250, 0, 0 + a.savedSlide.width(), 125, 0) * (r ? -1 : 1));
        }
        if (q == 1) {
            $(".itemslide_slideoutwrap").children().unwrap();
            if (a.savedSlideIndex == c.currentIndex) $(".itemslide_move").children(":nth-child(" + 1 + ")").attr("class", "itemslide-active");
            if (a.savedSlideIndex == a.children().length - 1 && !r && a.savedSlideIndex == c.currentIndex) {
                b.duration = 200;
                a.gotoSlide(a.children().length - 2);
            }
            if (a.savedSlideIndex == 0 && c.currentIndex != 0) {
                p = 500;
            }
            q = -1;
        }
        if (p >= 250) {
            o = false;
            if (q != -1) q = 1;
            if (p >= 375) {
                $(".itemslide_move").children().unwrap();
                a.removeSlide(k.index());
                if (a.savedSlideIndex == 0 && c.currentIndex != 0 || r) {
                    a.gotoWithoutAnimation(c.currentIndex - 1);
                }
                b.duration = i;
                p = 0;
                a.end_animation = true;
                return;
            }
        }
        h = requestAnimationFrame(s);
    }
}